p "s" $ pme Dots "p1" [up "eqs" ((zipui EqTexture) . (+ 1). (* 8) <$> timePattern)]
p "s" $ pme Sine "p10" [up "time" $ (zipui Volume) <$> (pure (+) <*> ( (* 2) <$> timePattern) <*> pure 0), up "scale" $ uf . (* 4) . sin . (* 3.1415) <$> timePattern]

p "s" $ pme StringTheory "p1" [timeUniform, up "angle_delta" $ (zipui Volume) <$> pure 2]
p "p1" $ pme Fade "p2" [up "fade" $ (zipui Volume) . (* 0.6)  . (+ 1) . sin . (* 3.1415) <$> timePattern]

p "p2" $ pt $ seqp $ pure <$> ["p5", "p4"]
p "p4" $ pme Mult "s2" []
p "p5" $ pme Add "s2" []

p "s2" $ pme AudioData "p3" [up "tex_audio" $ ui <$> pure (AudioTexture, -0.8)]
p "p3" $ pme Fade "bl" [up "fade" $ uf <$> pure 0.5]

p "s" $ pme AudioData "p8" [up "tex_audio" $ ui <$> pure (EqTexture, 20)]
p "p8" $ pme Repeat "p3" [up "times" $ uf <$> pure 4]

p "p9" $ pme Repeat "p1" [up "times" $ ui <$> pure (Volume, 2)]
p "p10" $ pme Fade "p9" [up "fade"$ uf <$> pure 0.8]

p "p1" $ pt $ seqp $ pure <$> ["p4", "p5"]

p "p5" $ pme Add "s2" []

p "p4" $ pme Mult "s2" []


let flash = mappend (att 0 $ pure 1) (att 0.05 $ pure 0)

p "p3" $ pme Brightness "p7" [up "brightness" $ ui <$> pure (Volume, 0.04)]

p "p7" $ pme Fade "bl" [up "fade" $ uf <$> pure 0.92]

t 2.5

-------------------------------------------

p "s" $ pme (progName Dots) "p4" [up "eqs" ((zipui EqTexture) . (+ 1) . (* 8) . sin . (* 3.1415) <$> timePattern), timeUniform]
p "s" $ pme (progName AudioData) "p4" [up "tex_audio" (ui <$> pure (AudioTexture, 2))]
p "p2" $ pme (effectName Repeat) "p3" [up "times" $ uf . (* 3) . sin . (* 3.1415) <$> timePattern]

p "p2" $ pt $ seqp $ (pure ) <$> ["p3", "p4"]


p  "s" $ seqp [pme (progName AudioData) "p2" [up "tex_audio" (ui <$> pure (AudioTexture, 2))], pme (progName Sine) "p2" [timeUniform]]

p "p2" $ pm (effectName Scale) [up "scale" (uf . (* (-0.05)) .sin . (* (3.1415 * 1.2)) <$> timePattern)]

p "p4" $ pme (effectName Repeat) "p3" [up "times" $ uf <$> (seqp $ pure <$> [0, 1, 2, 3, 2, 1])]


p "p3" $ pme (effectName Scale) "p4" [up "scale" $ uf <$> (seqp [pure 0, timePattern])]

t 2.2

p "p2" $ pme (effectName Fade) "p3" [up "fade" $ uf <$> offset 0.5 $ mconcat [att 0 $ pure 0, att 0.5 $ pure 0.9]]
p "p3" $ pme (effectName Fade) "bl" [up "fade" $ uf <$> pure 0.9]
p "p4" $ pme (effectName Fade) "p0" [up "fade" $ uf <$> pure 0.97]

 scaleEffect = programMessage (effectName Scale) Nothing [uniformPattern "scale" ((* 0.5) . sin . (* (3.1415 * 2)) <$> timePattern)]
